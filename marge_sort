#include<iostream>
#include<time.h>

using namespace std;
void merge(int arr[], int s, int mid, int e){
    int len1 = mid - s + 1;
    int len2 = e - mid ;
    int *first = new int[len1];
    int *second = new int[len2];
    //copy value
    int i = 0;
    for(int ind = s; ind <=mid; ind++){
        first[i] = arr[ind];
        i++;
    }
    int j=0;
    for(int ind=mid+1; ind<=e; ind++){
        second[j] = arr[ind];
        j++;
    }
    //merge two array into the original arr
    int orignalarrayindex = s;
    int ind1 = 0;
    int ind2 = 0;
    while(ind1 < len1 && ind2 < len2) {
        if(first[ind1] < second[ind2]){
            arr[orignalarrayindex] = first[ind1];
            ind1++;
            orignalarrayindex++;
        }
        else{
            arr[orignalarrayindex] = second[ind2];
            ind2++;
            orignalarrayindex++;
        }
    }
        //exheust first array
        while(ind1<len1){
             arr[orignalarrayindex] = first[ind1];
            ind1++;
            orignalarrayindex++;
        }
        while(ind2<len2){
             arr[orignalarrayindex] = second[ind2];
            ind2++;
            orignalarrayindex++;
        }
}
void mergeSort(int arr[], int s, int e){
    //base case
    if(s >= e)
        return;
    int mid = s + (e-s)/2;
    //left part devide call
    mergeSort(arr,s,mid);
    //right part deide call
    mergeSort(arr, mid+1, e);

    merge(arr, s, mid, e);
}

int main()
{
    int arr[100000];
    int size;
    srand(time(0));
    cout<<"enter size :";
    cin>>size;
   // original value
   cout<<"your input"<<endl;
    for(int i = 0; i<size; i++){
        arr[i]=rand()%100+1;
        cout<<arr[i]<<" ";
    }cout<<endl;
    cout<<"\n\n\nPrinting sorted array -> "<<endl;
    mergeSort(arr,0,size);
    for(int i = 0; i<size; i++){
        cout<<arr[i]<<" ";
    }cout<<endl;
}
